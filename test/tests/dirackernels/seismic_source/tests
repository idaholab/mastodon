[Tests]
  design = "SeismicSource.md"
  issues = "19"
  [./one_seismic_source]
    type = 'Exodiff'
    input = 'one_seismic_source.i'
    exodiff = 'one_seismic_source_out.e'
    abs_zero = 1e-06
    compiler = 'GCC CLANG'

    requirement = "The SeismicSource action and the SeismicSource class shall accurately apply a point source at the user-provided point within the computational domain."
  [../]
  [./synchronous_rupture]
    type = 'Exodiff'
    input = 'synchronous_rupture.i'
    exodiff = 'synchronous_rupture_out.e'

    requirement = "The SeismicSource action and the SeismicSource class shall accurately apply multiple point source at the user-provided points within the computational domain, and also trigger all these point sources to rupture at the same time instant."
  [../]
  [./asynchronous_rupture]
    type = 'Exodiff'
    input = 'asynchronous_rupture.i'
    exodiff = 'asynchronous_rupture_out.e'

    requirement = "The SeismicSource action and the SeismicSource class shall accurately apply multiple point sources at the user-provided points within the computational domain, and also trigger the point sources to rupture with a time delay calculated based on the rupture velocity and the distance of the point source from the epicenter."
  [../]
  [./displacement_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = 'DiracKernels/SeismicSource/one_source/displacements=disp_x'
    expect_err = "Error in one_source. The number of displacement variables must match the mesh dimension."

    requirement = "The SeismicSource class shall produce an error when the number of provided displacement variables does not match the mesh dimension."
  [../]
  [./point_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    expect_err = "Error in mastodon_seismic_source0. Either a point of a set of points should be given as input."

    requirement = "The SeismicSource class shall produce an error if neither the point nor the set of points at which the source is located is not supplied as input.."
  [../]
  [./number_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/position_function='pos'"
    expect_err = "Error in mastodon_seismic_source0. Please specify number of source points defined in the function."

    requirement = "The SeismicSource class shall produce an error when a position_function is used to define the set of source points, but the number of source points is not supplied as input."
  [../]
  [./position_number_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/position_function='pos'
                DiracKernels/SeismicSource/one_source/number=3"
    expect_err = "Error in mastodon_seismic_source0. The number of position functions should be equal to mesh dimension."

    requirement = "The SeismicSource class shall produce an error when the number of position functions does not match the mesh dimension."
  [../]
  [./no_rupture_speed_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/position_function='pos pos pos'
                DiracKernels/SeismicSource/one_source/number=3
                DiracKernels/SeismicSource/one_source/epicenter='0.2 0.2 0.2'"
    expect_err = "Error in mastodon_seismic_source0. Either both rupture speed and epicenter should be provided or neither should be provided."

    requirement = "The SeismicSource class shall produce an error if only the epicenter is provided as input, but not the rupture speed."
  [../]
  [./no_epicenter_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/position_function='pos pos pos'
                DiracKernels/SeismicSource/one_source/number=3
                DiracKernels/SeismicSource/one_source/rupture_speed=1"
    expect_err = "Error in mastodon_seismic_source0. Either both rupture speed and epicenter should be provided or neither should be provided."

    requirement = "The SeismicSource class shall produce an error if only the rupture speed is provided as input, but not the epicenter."
  [../]
  [./epicenter_number_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/position_function='pos pos pos'
                DiracKernels/SeismicSource/one_source/number=3
                DiracKernels/SeismicSource/one_source/rupture_speed=1
                DiracKernels/SeismicSource/one_source/epicenter=0.2"
    expect_err = "Error in mastodon_seismic_source0. Epicenter should be same size as mesh dimension."

    requirement = "The SeismicSource class shall produce an error if the length of the epicenter vector is not the same as the mesh dimension."
  [../]
  [./point_rupture_speed]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/point='0.1 0.2 0.3'
                DiracKernels/SeismicSource/one_source/number=3
                DiracKernels/SeismicSource/one_source/rupture_speed=1
                DiracKernels/SeismicSource/one_source/epicenter=0.2"
    expect_err = "Error in mastodon_seismic_source0. Rupture speed and epicenter should only be provided when multiple point sources are specified."

    requirement = "The SeismicSource class shall produce an error if the epicenter and rupture speed are provided as input for a single seismic source."
  [../]
  [./negative_speed_error]
    type = 'RunException'
    input = 'seismic_source_error.i'
    cli_args = "DiracKernels/SeismicSource/one_source/position_function='pos pos pos'
                DiracKernels/SeismicSource/one_source/number=3
                DiracKernels/SeismicSource/one_source/rupture_speed=-1
                DiracKernels/SeismicSource/one_source/epicenter='0.2 0.2 0.2'"
    expect_err = "Error in mastodon_seismic_source0. Rupture speed has to be positive."

    requirement = "The SeismicSource class shall produce an error if the user-provided rupture speed is not positive."
  [../]
  [./2D_non_strike_error]
     type = 'RunException'
     input = '2D_seismic_source_error.i'
     expect_err = "Error in mastodon_seismic_source0. A non-zero strike angle for 2D models will create an out-of-plane earthquake wave. This is currently not supported."

     requirement = "The SeismicSource class shall produce a warning if a non-zero strike angle is provided as input for 2D models, indicating that out-of-plane earthquake waves would be generated."
  [../]
  [./1D_error]
    type = 'RunException'
    input = '1D_seismic_source_error.i'
    expect_err = "Error in mastodon_seismic_source0. Only mesh dimensions of 2 and 3 are currently supported."

    requirement = "The SeismicSource class shall produce an error if it is used on a 1D mesh."
  [../]
[]
